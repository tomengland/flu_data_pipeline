version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: flu_postgres
    environment:
      POSTGRES_USER: fluuser
      POSTGRES_PASSWORD: flupass
      POSTGRES_DB: flu_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flu_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U fluuser" ]
      interval: 10s
      timeout: 5s
      retries: 5

  jupyter:
    build: .
    container_name: flu_jupyter
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=fluuser
      - POSTGRES_PASSWORD=flupass
      - POSTGRES_DB=flu_database
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - flu_network

  flask-api:
    build: .
    container_name: flu_flask_api
    command: python api/app.py
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=fluuser
      - POSTGRES_PASSWORD=flupass
      - POSTGRES_DB=flu_database
      - FLASK_ENV=development
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - flu_network

networks:
  flu_network:
    driver: bridge

volumes:
  postgres_data:
